(()=>{"use strict";const e=window.React,t=window.wc.wcBlocksRegistry,a=window.wp.i18n,n=window.wp.data,s=window.wp.element,o=window.wc.wcSettings,c=window.wp.htmlEntities,r="dnapayments",l="woocommerce-gateway-dna",d={number:`wc-${r}-card-number-hosted`,name:`wc-${r}-card-name-hosted`,expDate:`wc-${r}-expiry-hosted`,cvv:`wc-${r}-csc-hosted`,cvvToken:`wc-${r}-csc-token-hosted`,threeDS:"three-d-secure"},i=window.wc.blocksCheckout,m=()=>{const e=(0,o.getPaymentMethodData)(r,{});return{isTestMode:e.is_test_mode,integrationType:e.integration_type,tempToken:e.temp_token,terminalId:e.terminal_id,allowSavingCards:e.allow_saving_cards,sendCallbackEveryFailedAttempt:Number(e.send_callback_every_failed_attempt),cards:e.cards}};function p(e){console.error("CODE",e.code,"MESSAGE",e.message),console.error(e)}function u(e){const t=document.querySelector("button.wc-block-components-checkout-place-order-button");t&&(e?t.setAttribute("disabled","disabled"):t.removeAttribute("disabled"))}const y=({props:t,isLoaded:n=!1,hostedFieldsInstance:o=null,onLoad:c=(()=>{})})=>{const{components:{LoadingMask:r},token:y=null}=t,w=(0,s.useRef)(!1),h=(0,s.useRef)(),[v,E]=(0,s.useState)(!1),[g,b]=(0,s.useState)({name:"",number:"",expirationDate:"",cvv:""});return(0,s.useEffect)((()=>{const{cards:e}=m();if(y&&o){const t=e.find((e=>String(e.id)===String(y)));if(t){const e=o.getTokenizedCardCvvState(t);E("required"===e),o.selectCard(t)}}}),[y]),(0,s.useEffect)((()=>(w.current=!0,setTimeout((()=>{w.current&&(async()=>{const{isTestMode:e,tempToken:t,cards:a,sendCallbackEveryFailedAttempt:n}=m(),s=a.find((e=>String(e.id)===String(y)));if(u(!0),h.current=function(e){const t=document.createElement("div");t.className="dna-modal-container",t.id=e;const a=document.createElement("div");a.className="dna-modal";const n=document.createElement("div");return n.className="dna-modal-body",a.appendChild(n),t.appendChild(a),document.body.appendChild(t),{show:()=>t.classList.add("open"),hide:()=>t.classList.remove("open"),remove:()=>t.remove(),body:n}}(d.threeDS),o=await async function({isTest:e,accessToken:t,threeDSModal:a,domElements:{number:n,name:s,expDate:o,cvv:c,cvvToken:r},sendCallbackEveryFailedAttempt:l=0}){const d={cardholderName:{container:s,placeholder:"ABC"},cardNumber:{container:n,placeholder:"1234 1234 1234 1234"},expirationDate:{container:o,placeholder:"MM / YY"},cvv:{container:c,placeholder:"CVC"},tokenizedCardCvv:{container:r,placeholder:"CVC"}},i={isTest:e,accessToken:t,styles:{input:{"font-size":"14px","font-family":"Open Sans"},"::placeholder":{opacity:"0"},"input:focus::placeholder":{opacity:"0.5"}},styleConfig:{containerClasses:{FOCUSED:"focused",INVALID:"has-error"}},fontNames:["Open Sans"],threeDSecure:{container:a.body},fields:d,sendCallbackEveryFailedAttempt:l};try{const e=await window.dnaPayments.hostedFields.create(i);return e.on("blur",(function({fieldKey:e,fieldsState:t}){const a=d[e]?.container,n=t[e]?.isEmpty;a&&a.classList.toggle("empty",n)})),e.on("dna-payments-three-d-secure-show",(e=>{a&&a.show()})),e.on("dna-payments-three-d-secure-hide",(()=>{a&&a.hide()})),e}catch(e){throw p(e),new Error("Your card has not been authorised, please check the details and retry or contact your bank.")}}({isTest:e,accessToken:t,threeDSModal:h.current,domElements:{number:document.getElementById(d.number),name:document.getElementById(d.name),expDate:document.getElementById(d.expDate),cvv:document.getElementById(d.cvv),cvvToken:document.getElementById(d.cvvToken)},sendCallbackEveryFailedAttempt:n}),s){const e=o.getTokenizedCardCvvState(s);E("required"===e),o.selectCard(s)}u(!1),c(o)})()}),100),()=>{w.current=!1,o&&o.destroy(),h.current&&(h.current.remove(),h.current=null),c(null)})),[]),(0,e.createElement)(r,{isLoading:!n,showSpinner:!0},(0,e.createElement)("div",{className:"wc-block-dnapayments-card-elements",style:{display:y?"none":"flex"}},(0,e.createElement)("div",{className:"wc-block-gateway-container"},(0,e.createElement)("div",{id:d.number,className:"wc-block-gateway-input empty"}),(0,e.createElement)("label",{htmlFor:d.number},(0,a.__)("Card number",l)),(0,e.createElement)(i.ValidationInputError,{errorMessage:g.number})),(0,e.createElement)("div",{className:"wc-block-gateway-container"},(0,e.createElement)("div",{id:d.name,className:"wc-block-gateway-input empty"}),(0,e.createElement)("label",{htmlFor:d.name},(0,a.__)("Cardholder name",l)),(0,e.createElement)(i.ValidationInputError,{errorMessage:g.name})),(0,e.createElement)("div",{className:"wc-block-gateway-container wc-block-dnapayments-card-element-small"},(0,e.createElement)("div",{id:d.expDate,className:"wc-block-gateway-input empty"}),(0,e.createElement)("label",{htmlFor:d.expDate},(0,a.__)("Expiry date (MMYY)",l)),(0,e.createElement)(i.ValidationInputError,{errorMessage:g.expirationDate})),(0,e.createElement)("div",{className:"wc-block-gateway-container wc-block-dnapayments-card-element-small"},(0,e.createElement)("div",{id:d.cvv,className:"wc-block-gateway-input empty"}),(0,e.createElement)("label",{htmlFor:d.cvv},(0,a.__)("Card code (CVC)",l)),(0,e.createElement)(i.ValidationInputError,{errorMessage:g.cvv}))),(0,e.createElement)("div",{className:"wc-block-dnapayments-card-elements",style:{display:v?"flex":"none"}},(0,e.createElement)("div",{className:"wc-block-gateway-container wc-block-dnapayments-card-element-small"},(0,e.createElement)("div",{id:d.cvvToken,className:"wc-block-gateway-input empty"}),(0,e.createElement)("label",{htmlFor:d.cvvToken},(0,a.__)("Card code (CVC)",l)),(0,e.createElement)(i.ValidationInputError,{errorMessage:g.cvv}))))},w=e=>{try{return JSON.parse(e)}catch(e){return p(e),null}};var h;const v=(0,o.getPaymentMethodData)(r,{}),E=v.allow_saving_cards,g="hosted-fields"===v.integration_type,b=(0,a.__)("DNA Payments",l),C=(0,c.decodeEntities)(v?.title||"")||b,k=t=>{const[o,r]=(0,s.useState)(!1),[d,i]=(0,s.useState)(null);return(({props:e,hostedFieldsInstance:t})=>{const{emitResponse:n,eventRegistration:{onCheckoutSuccess:o},shouldSavePayment:c}=e,{isTestMode:r,integrationType:d,allowSavingCards:i,cards:u}=m(),y=i?u:[];(0,s.useEffect)((()=>o((({processingResponse:{paymentDetails:e}})=>new Promise((s=>{const o=w(e.paymentData),m=w(e.auth),u=w(o.merchantCustomData)||{},{returnUrl:h,failureReturnUrl:v}=o.paymentSettings;switch(d){case"hosted-fields":window.DNAPayments.configure({isTestMode:r,cards:y,allowSavingCards:i}),t.submit({paymentData:{...o,merchantCustomData:JSON.stringify({...u,storeCardOnFile:c})},token:m.access_token}).then((()=>{s({type:n.responseTypes.SUCCESS,messageContext:n.noticeContexts.PAYMENTS}),window.location.href=h})).catch((e=>{p(e);let o=e.message;"INVALID_CARD_DATA"!==e.code&&(t.clear(),o=(0,a.__)("Your card has not been authorised, please check the details and retry or contact your bank.",l)),s({type:n.responseTypes.ERROR,message:o,messageContext:n.noticeContexts.PAYMENTS}),String(e.code).includes("CLOSE_TRANSACTION")&&(window.location.href=v)}));break;case"embedded":window.DNAPayments.configure({isTestMode:r,cards:y,allowSavingCards:i,events:{cancelled:()=>s({type:n.responseTypes.ERROR,message:(0,a.__)("You have cancelled the payment process. Please try again if you wish to complete the order.",l),messageContext:n.noticeContexts.PAYMENTS}),paid:()=>s({type:n.responseTypes.SUCCESS,messageContext:n.noticeContexts.PAYMENTS}),declined:()=>s({type:n.responseTypes.ERROR,message:(0,a.__)("Your payment proccess has been failed.",l),messageContext:n.noticeContexts.PAYMENTS})}}),window.DNAPayments.openPaymentIframeWidget({...o,auth:m});break;default:window.DNAPayments.configure({isTestMode:r,cards:y,allowSavingCards:i}),window.DNAPayments.openPaymentPage({...o,auth:m})}}))))),[o,t])})({props:t,hostedFieldsInstance:d}),(0,n.select)("core/editor")?null:g?(0,e.createElement)(y,{props:t,isLoaded:o,hostedFieldsInstance:d,onLoad:e=>{i(e),r(!0)}}):(0,e.createElement)(s.RawHTML,null,(0,c.decodeEntities)(v.description||""))},S={name:r,label:(0,e.createElement)((t=>{const{PaymentMethodLabel:a}=t.components;return(0,e.createElement)(a,{text:C})}),null),content:(0,e.createElement)(k,null),edit:(0,e.createElement)((t=>(0,e.createElement)(s.RawHTML,null,(0,c.decodeEntities)(v.description||""))),null),canMakePayment:()=>!0,savedTokenComponent:(0,e.createElement)(k,null),ariaLabel:C,supports:{showSavedCards:E&&g,showSaveOption:E&&g,features:null!==(h=v?.supports)&&void 0!==h?h:[]},placeOrderButtonLabel:(0,a.__)("Pay with DNA Payments",l)};(0,t.registerPaymentMethod)(S)})();